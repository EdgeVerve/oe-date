{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "# oe-datepicker\n\n`<oe-datepicker>` is a control  to select `date` from the display.",
      "summary": "",
      "path": "oe-datepicker.js",
      "properties": [
        {
          "name": "value",
          "type": "Date | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 12
            },
            "end": {
              "line": 205,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Date"
            }
          }
        },
        {
          "name": "startOfWeek",
          "type": "number | null | undefined",
          "description": "Start of week, expressed as 0-6",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 12
            },
            "end": {
              "line": 214,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 12
            },
            "end": {
              "line": 219,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabledDays",
          "type": "Array | null | undefined",
          "description": "Weekly offs expressed as [0-6]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 12
            },
            "end": {
              "line": 230,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "holidays",
          "type": "Array | null | undefined",
          "description": "List of dates that should be disabled for selection,\n Should be Date objects or date strings in 'MM-DD-YYYY' format",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 12
            },
            "end": {
              "line": 238,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_holidayChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "max",
          "type": "Date | null | undefined",
          "description": "Maximum selectable date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 12
            },
            "end": {
              "line": 245,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_renderCurrentMonth\"",
              "attributeType": "Date"
            }
          }
        },
        {
          "name": "min",
          "type": "Date | null | undefined",
          "description": "Minimum selectable date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 12
            },
            "end": {
              "line": 253,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_renderCurrentMonth\"",
              "attributeType": "Date"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_valueChanged",
          "description": "Observer on value changed to create display for month and year.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 290,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_prevMonth",
          "description": "Renders previous month display",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 4
            },
            "end": {
              "line": 302,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_nextMonth",
          "description": "Renders next month display",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_prevYear",
          "description": "Selects previous year",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_nextYear",
          "description": "Selects next year",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_doubleClick",
          "description": "On double click of a date set it as selected date.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_pickDate",
          "description": "Sets the selected UTC date as value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 353,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getDetails",
          "description": "Returns a detailed information on the date.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 372,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dValue",
              "type": "Date",
              "description": "date value"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Containing information like 'day','month',etc."
          }
        },
        {
          "name": "_pickMonth",
          "description": "Selects a month and prepare the display",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 4
            },
            "end": {
              "line": 385,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event contains the month to select"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_pickYear",
          "description": "Selects the year and prepares the display",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 4
            },
            "end": {
              "line": 398,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event contains the year to select"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getDateClass",
          "description": "Returns CSS classes for the date components for styling.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 4
            },
            "end": {
              "line": 420,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "day",
              "type": "number",
              "description": "day value"
            },
            {
              "name": "month",
              "type": "number",
              "description": "month value"
            },
            {
              "name": "selected",
              "type": "Date",
              "description": "selected date"
            }
          ],
          "return": {
            "type": "string",
            "desc": "CSS classNames containing 'selected' and 'disabled'"
          }
        },
        {
          "name": "prepareMonth",
          "description": "Prepares the month array with startdate, enddate and padding,\nso as to position the days correctly using dom-repeat.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 459,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "curMonth",
              "type": "number"
            },
            {
              "name": "curYear",
              "type": "number"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isDateDisabled",
          "description": "Checks if the input date is diabled based on\n'min','max' and 'disabledDays' list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 4
            },
            "end": {
              "line": 483,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dateValue",
              "type": "number"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true if date is disabled."
          }
        },
        {
          "name": "_holidayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 485,
              "column": 4
            },
            "end": {
              "line": 497,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_equals",
          "description": "String compare used in dom-if",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 505,
              "column": 4
            },
            "end": {
              "line": 507,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "showing",
              "type": "string"
            },
            {
              "name": "mode",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true if strings are equal."
          }
        },
        {
          "name": "_showYear",
          "description": "Displays the list of months of selected year",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 4
            },
            "end": {
              "line": 514,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_nextDecade",
          "description": "Displays years from the next decade",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 519,
              "column": 4
            },
            "end": {
              "line": 522,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_prevDecade",
          "description": "Displays years from the previous decade",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 4
            },
            "end": {
              "line": 530,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showDecade",
          "description": "Displays the years of the selected decade",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 535,
              "column": 4
            },
            "end": {
              "line": 545,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_settingsChanged",
          "description": "Prepares the internationalized dates list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 553,
              "column": 4
            },
            "end": {
              "line": 572,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "l",
              "type": "locale"
            },
            {
              "name": "s",
              "type": "*"
            },
            {
              "name": "d",
              "type": "*"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createIntlSettings",
          "description": "Creates a default setting for Internationalized date time format",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 578,
              "column": 4
            },
            "end": {
              "line": 632,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale",
              "type": "locale"
            }
          ]
        },
        {
          "name": "connectedCallback",
          "description": "Displays list of days by default on attached to DOM.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 646,
              "column": 4
            },
            "end": {
              "line": 656,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_renderCurrentMonth",
          "description": "Renders the current month's days",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 661,
              "column": 4
            },
            "end": {
              "line": 663,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/demo-oe-datepicker.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 665,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDatepicker",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 12
            },
            "end": {
              "line": 205,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date | null | undefined"
        },
        {
          "name": "start-of-week",
          "description": "Start of week, expressed as 0-6",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 12
            },
            "end": {
              "line": 214,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "locale",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 12
            },
            "end": {
              "line": 219,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled-days",
          "description": "Weekly offs expressed as [0-6]",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 12
            },
            "end": {
              "line": 230,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "holidays",
          "description": "List of dates that should be disabled for selection,\n Should be Date objects or date strings in 'MM-DD-YYYY' format",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 12
            },
            "end": {
              "line": 238,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "max",
          "description": "Maximum selectable date",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 12
            },
            "end": {
              "line": 245,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date | null | undefined"
        },
        {
          "name": "min",
          "description": "Minimum selectable date",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 12
            },
            "end": {
              "line": 253,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selection-changed",
          "description": "Occurs when a date is selected.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selection-double-click",
          "description": "Occurs when user double-clicks a date to select it.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-datepicker"
    },
    {
      "description": "# oe-datepicker-dlg\n\n`<oe-datepicker-dlg>` is a control used in oe-date to display the date-picker in a dialog box.\nRaises event `oe-date-picked` when date is selected.",
      "summary": "",
      "path": "oe-datepicker-dlg.js",
      "properties": [
        {
          "name": "value",
          "type": "Date | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Date"
            }
          }
        },
        {
          "name": "startOfWeek",
          "type": "number | null | undefined",
          "description": "Denotes the day to be used as the start of week",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabledDays",
          "type": "Array | null | undefined",
          "description": "Array of days of the week to set as disabled.\nExample [5,6] to set 5th and 6th day of week as disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "holidays",
          "type": "Array | null | undefined",
          "description": "List of dates that should be disabled for selection,\n Should be Date objects or date strings in 'MM-DD-YYYY' format",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "max",
          "type": "Date | null | undefined",
          "description": "Maximum selectable date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 15
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Date"
            }
          }
        },
        {
          "name": "min",
          "type": "Date | null | undefined",
          "description": "Minimum selectable date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 200,
              "column": 15
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Date"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "open",
          "description": "Opens the dialog box by setting the value aor current Date in UTC",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 229,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showMonth",
          "description": "Displays all the days of the selected month",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showYear",
          "description": "Displays all the months of the selected year",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 2
            },
            "end": {
              "line": 243,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showDecade",
          "description": "Displays all the years of the selected decade.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_refreshDetails",
          "description": "Refreshes the display with date from the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 2
            },
            "end": {
              "line": 263,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectionConfirmed",
          "description": "Listener to double-click of a date in datepicker.\nSets day,month,year and 'value'.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 2
            },
            "end": {
              "line": 273,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onOK",
          "description": "Sets the selected value and closes the dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 2
            },
            "end": {
              "line": 282,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onCancel",
          "description": "Closes the dialog box",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 290,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "patchOverlay",
          "description": "Pactch to move the backdrop behind the dialog box.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 2
            },
            "end": {
              "line": 300,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "Connected Callback to initiate event listeners.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 2
            },
            "end": {
              "line": 310,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 312,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDatepickerDlg",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Date | null | undefined"
        },
        {
          "name": "start-of-week",
          "description": "Denotes the day to be used as the start of week",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "locale",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled-days",
          "description": "Array of days of the week to set as disabled.\nExample [5,6] to set 5th and 6th day of week as disabled.",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "holidays",
          "description": "List of dates that should be disabled for selection,\n Should be Date objects or date strings in 'MM-DD-YYYY' format",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "max",
          "description": "Maximum selectable date",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 15
            }
          },
          "metadata": {},
          "type": "Date | null | undefined"
        },
        {
          "name": "min",
          "description": "Minimum selectable date",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 200,
              "column": 15
            }
          },
          "metadata": {},
          "type": "Date | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-date-picked",
          "description": "Occurs when a date is selected by pressing the Ok button.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-datepicker-dlg"
    },
    {
      "description": "# oe-date\n\n`<oe-date>` is a control  to capture `date` data. `value` property exposes the selected date always in midnight UTC.",
      "summary": "",
      "path": "oe-date.js",
      "properties": [
        {
          "name": "_focusableElement",
          "type": "HTMLElement",
          "description": "Returns a reference to the focusable element. Overridden from\nPaperInputBehavior to correctly focus the native input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 2
            },
            "end": {
              "line": 217,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "inputElement",
          "type": "?",
          "description": "Returns a reference to the input element.\n   ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "init",
          "type": "string | null | undefined",
          "description": "Initial/default value for the control",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hideIcon",
          "type": "boolean | null | undefined",
          "description": "Setting to true hides the calender icon in the control which open the datepicker dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "dropdownMode",
          "type": "boolean | null | undefined",
          "description": "Setting to true makes the datepicker open as a dropdown instead of a dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "verticalOffset",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "62"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "openOnFocus",
          "type": "boolean | null | undefined",
          "description": "Setting to true makes the datepicker open as a dropdown on focus of this element.\nThis will work only if the oe-date component is in dropdown-mode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "Connected Callback to initiate 'change' listener with validation function.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 2
            },
            "end": {
              "line": 192,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_focusHandle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_blurHandle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 2
            },
            "end": {
              "line": 207,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showDatePicker",
          "description": "Launches date-picker as dialog or a dropdown",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 2
            },
            "end": {
              "line": 241,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_datePicked",
          "description": "Validate the date selected",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 2
            },
            "end": {
              "line": 248,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeIcon",
          "description": "Selects the icon to display inside the oe-date input",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dropdownMode",
              "type": "boolean"
            }
          ],
          "return": {
            "type": "string",
            "desc": "icon for dropdown or calendar"
          }
        },
        {
          "name": "_onOK",
          "description": "Sets the selected value and closes the dropdown",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 2
            },
            "end": {
              "line": 266,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onCancel",
          "description": "Closes the dropdown",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 274,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_maxChanged",
          "description": "Parses the shorthand for \"max\" and validates the value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 2
            },
            "end": {
              "line": 290,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newMax",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_minChanged",
          "description": "Parses the shorthand for \"min\" and validates the value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 2
            },
            "end": {
              "line": 306,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newMin",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/demo-oe-date.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 309,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDate",
      "attributes": [
        {
          "name": "init",
          "description": "Initial/default value for the control",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hide-icon",
          "description": "Setting to true hides the calender icon in the control which open the datepicker dialog",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "dropdown-mode",
          "description": "Setting to true makes the datepicker open as a dropdown instead of a dialog",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "vertical-offset",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "vertical-align",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "open-on-focus",
          "description": "Setting to true makes the datepicker open as a dropdown on focus of this element.\nThis will work only if the oe-date component is in dropdown-mode.",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "max",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "min",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-date-picked",
          "description": "Occurs when a date is selected by pressing the Ok button.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-date",
      "mixins": [
        "OEFieldMixin",
        "OEDateMixin"
      ]
    },
    {
      "description": "# oe-datetime\n\n`<oe-datetime>` is a control to capture the date-time value.",
      "summary": "",
      "path": "oe-datetime.js",
      "properties": [
        {
          "name": "_focusableElement",
          "type": "HTMLElement",
          "description": "Returns a reference to the focusable element. Overridden from\nPaperInputBehavior to correctly focus the native input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 333,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "inputElement",
          "type": "?",
          "description": "Returns a reference to the input element.\n     ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 506,
              "column": 4
            },
            "end": {
              "line": 508,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "init",
          "type": "string | null | undefined",
          "description": "Initial/default value for the control",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 12
            },
            "end": {
              "line": 165,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "string | null | undefined",
          "description": "Minimum allowed value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 12
            },
            "end": {
              "line": 172,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "max",
          "type": "string | null | undefined",
          "description": "Maximum allowed value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 12
            },
            "end": {
              "line": 179,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "dateValue",
          "type": "Date | null | undefined",
          "description": "The date component of time displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 12
            },
            "end": {
              "line": 187,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dateValueChanged\"",
              "attributeType": "Date"
            }
          }
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour component of the time displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 12
            },
            "end": {
              "line": 194,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute component of the time displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 12
            },
            "end": {
              "line": 201,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "txtAMPM",
          "type": "string | null | undefined",
          "description": "currently displayed value on AM/PM toggle",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 12
            },
            "end": {
              "line": 209,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"AM\""
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 12
            },
            "end": {
              "line": 216,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "format",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 12
            },
            "end": {
              "line": 223,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_formattingChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"DD MMM YYYY\""
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 12
            },
            "end": {
              "line": 227,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "ariaLabelPrefix",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 12
            },
            "end": {
              "line": 231,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hideIcon",
          "type": "boolean | null | undefined",
          "description": "Setting to true hides the calender icon in the control which open the datepicker dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 12
            },
            "end": {
              "line": 239,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "dropdownMode",
          "type": "boolean | null | undefined",
          "description": "Setting to true makes the datepicker open as a dropdown instead of a dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 12
            },
            "end": {
              "line": 246,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "verticalOffset",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 12
            },
            "end": {
              "line": 250,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "62"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 12
            },
            "end": {
              "line": 254,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "openOnFocus",
          "type": "boolean | null | undefined",
          "description": "Setting to true makes the datepicker open as a dropdown on focus of this element.\nThis will work only if the oe-datetime component is in dropdown-mode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 12
            },
            "end": {
              "line": 262,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "Checks if the min and max values are valid , then attaches event listerners.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_focusHandle",
          "description": "Handles opening the dropdown on focus of input based on 'openOnFocus' flag",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "Observer on value change to set the hour and minute from Date time.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 360,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "DateTime"
            },
            {
              "name": "oldValue",
              "type": "DateTime"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeValue",
          "description": "Computes the DateTime value for given date, hour and minute.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 381,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dVal",
              "type": "Date"
            },
            {
              "name": "hVal",
              "type": "number"
            },
            {
              "name": "mVal",
              "type": "number"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dateValueChanged",
          "description": "Validates the date selected from date-picker and sets the value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 389,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "Date"
            },
            {
              "name": "oldValue",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_displayChanged",
          "description": "Change event listener that parses the shorthand values given in input like 'tom' or 'today',\nand sets the parsed DateTime on the 'value' property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 441,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "*"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showDatePicker",
          "description": "Displays the datepicker in dropdown or dialog-box",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 447,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onOK",
          "description": "Sets the date selected in datePicker as the date value\nand closes the date-picker.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 464,
              "column": 4
            },
            "end": {
              "line": 469,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onCancel",
          "description": "Resets datepicker selection and closes the date-picker",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 4
            },
            "end": {
              "line": 477,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeIcon",
          "description": "Selects the icon to display on the input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 484,
              "column": 4
            },
            "end": {
              "line": 486,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dropdownMode",
              "type": "boolean"
            }
          ],
          "return": {
            "type": "string",
            "desc": "icon name"
          }
        },
        {
          "name": "_datePicked",
          "description": "Sets the value for hour and minute once the date is selected",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 492,
              "column": 4
            },
            "end": {
              "line": 501,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeAriaLabel",
          "description": "Generates new aria label be joining two input labels",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 516,
              "column": 4
            },
            "end": {
              "line": 518,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prefixLabel",
              "type": "string"
            },
            {
              "name": "suffixLabel",
              "type": "string"
            }
          ],
          "return": {
            "type": "string",
            "desc": "combined aria-label"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/demo-oe-datetime.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 520,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDatetime",
      "attributes": [
        {
          "name": "init",
          "description": "Initial/default value for the control",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 12
            },
            "end": {
              "line": 165,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Minimum allowed value",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 12
            },
            "end": {
              "line": 172,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "max",
          "description": "Maximum allowed value",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 12
            },
            "end": {
              "line": 179,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "date-value",
          "description": "The date component of time displayed.",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 12
            },
            "end": {
              "line": 187,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date | null | undefined"
        },
        {
          "name": "hour",
          "description": "The hour component of the time displayed.",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 12
            },
            "end": {
              "line": 194,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "minute",
          "description": "The minute component of the time displayed.",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 12
            },
            "end": {
              "line": 201,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "txt-a-m-p-m",
          "description": "currently displayed value on AM/PM toggle",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 12
            },
            "end": {
              "line": 209,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 12
            },
            "end": {
              "line": 216,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "format",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 12
            },
            "end": {
              "line": 223,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 12
            },
            "end": {
              "line": 227,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "aria-label-prefix",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 12
            },
            "end": {
              "line": 231,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hide-icon",
          "description": "Setting to true hides the calender icon in the control which open the datepicker dialog",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 12
            },
            "end": {
              "line": 239,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "dropdown-mode",
          "description": "Setting to true makes the datepicker open as a dropdown instead of a dialog",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 12
            },
            "end": {
              "line": 246,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "vertical-offset",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 12
            },
            "end": {
              "line": 250,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "vertical-align",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 12
            },
            "end": {
              "line": 254,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "open-on-focus",
          "description": "Setting to true makes the datepicker open as a dropdown on focus of this element.\nThis will work only if the oe-datetime component is in dropdown-mode.",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 12
            },
            "end": {
              "line": 262,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-date-picked",
          "description": "Occurs when a date is selected by pressing the Ok button.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-datetime",
      "mixins": [
        "OEFieldMixin",
        "OETimeMixin",
        "OEDateMixin"
      ]
    },
    {
      "description": "# oe-time\n\n`<oe-time>` is a control  to capture `time` data.",
      "summary": "",
      "path": "oe-time.js",
      "properties": [
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Set to true to mark the input as required.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 12
            },
            "end": {
              "line": 99,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour component of the time displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 12
            },
            "end": {
              "line": 107,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute component of the time displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 12
            },
            "end": {
              "line": 115,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "txtAMPM",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 12
            },
            "end": {
              "line": 120,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"AM\""
        },
        {
          "name": "ariaLabelPrefix",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 12
            },
            "end": {
              "line": 124,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable the hour and minute input elements.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 12
            },
            "end": {
              "line": 132,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set to true to autofocus the month input element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 12
            },
            "end": {
              "line": 139,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "inputmode",
          "type": "string | null | undefined",
          "description": "Bound to the hour and minute input elements' `inputmode` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 12
            },
            "end": {
              "line": 146,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Set to true to mark the hour and minute inputs as not editable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "txtHour",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 12
            },
            "end": {
              "line": 158,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "txtMinute",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 12
            },
            "end": {
              "line": 162,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "Connected Callback to initiate event listeners.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valuesChanged",
          "description": "Sets the AM/PM and pads the hour and minute values.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newHour",
              "type": "number"
            },
            {
              "name": "newMinute",
              "type": "number"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Custom validation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeAriaLabel",
          "description": "Computes aria-label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 208,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hourLabel",
              "type": "string"
            },
            {
              "name": "minuteLabel",
              "type": "string"
            }
          ],
          "return": {
            "type": "string"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 27,
          "column": 0
        },
        "end": {
          "line": 210,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeTime",
      "attributes": [
        {
          "name": "required",
          "description": "Set to true to mark the input as required.",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 12
            },
            "end": {
              "line": 99,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hour",
          "description": "The hour component of the time displayed.",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 12
            },
            "end": {
              "line": 107,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "minute",
          "description": "The minute component of the time displayed.",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 12
            },
            "end": {
              "line": 115,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "txt-a-m-p-m",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 12
            },
            "end": {
              "line": 120,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "aria-label-prefix",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 12
            },
            "end": {
              "line": 124,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the hour and minute input elements.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 12
            },
            "end": {
              "line": 132,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set to true to autofocus the month input element.",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 12
            },
            "end": {
              "line": 139,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "inputmode",
          "description": "Bound to the hour and minute input elements' `inputmode` property.",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 12
            },
            "end": {
              "line": 146,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Set to true to mark the hour and minute inputs as not editable.",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "txt-hour",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 12
            },
            "end": {
              "line": 158,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "txt-minute",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 12
            },
            "end": {
              "line": 162,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "hour-changed",
          "description": "Fired when the `hour` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "minute-changed",
          "description": "Fired when the `minute` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-time",
      "mixins": [
        "OETimeMixin"
      ]
    }
  ]
}
